package linkedList.list;

import linkedList.node.ListNode;
import linkedList.node.SingleLinkNode;

public class SingleLinkedList<T> extends BasicList<SingleLinkNode<T>,T> implements List<T> {
    @Override
    public void add(int index, T value) throws ListAccessError {
        if(getRoot() == null){
            setRoot(new SingleLinkNode<T>(value));
            return;
        }

        SingleLinkNode<T> current = getRoot();
        while (index > 0 && current.getNext() != null) {
            current = current.getNext();
            index--;
        }

        if (current == null) {
            throw new ListAccessError("Node Out Of Range.");
        }

        SingleLinkNode<T> newNode = new SingleLinkNode<>(value);
        if(current.getNext() != null) {
            newNode.setNext(current.getNext());
        }
        current.setNext(newNode);

    }

    @Override
    public T remove(int index) throws ListAccessError {
        if (isEmpty() || index < 0) {
            throw new ListAccessError("Linked List Out Of Range.");
        }

        ListNode<T> current = getRoot();
        ListNode<T> last = getRoot();

        if(index == 0){
            last = current;
            current = getRoot().getNext();
            ((SingleLinkNode<T>) current).setNext(getRoot().getNext().getNext());
            return current.getValue();
        }

        while (index > 0 && current.getNext() != null) {
            current = current.getNext();
            index--;
        }

        if (current == null) {
            throw new ListAccessError("Node Out Of Range.");
        }

        ((SingleLinkNode<T>) last).setNext((SingleLinkNode<T>) current.getNext());


        return current.getValue();
    }

    @Override
    public T get(int index) throws ListAccessError {
        if (isEmpty() || index < 0) {
            throw new ListAccessError("Linked List Out Of Range.");
        }

        ListNode<T> current = getRoot();
        while (index > 0 && current.getNext() != null) {
            current = current.getNext();
            index--;
        }

        if (current == null) {
            throw new ListAccessError("Node Out Of Range.");
        }

        return current.getValue();
    }
}
